{"ast":null,"code":"var _jsxFileName = \"/Users/wisdomkalu/Desktop/Hackathon/react-master/src/views/examples/Manual.js\";\nimport React from \"react\";\n\n// // reactstrap components\n// import { Card, Container, Row } from \"reactstrap\";\n\n// // core components\nimport Header from \"components/Headers/Header.js\";\n\n// const MapWrapper = () => {\n//   const mapRef = React.useRef(null);\n//   React.useEffect(() => {\n//     let google = window.google;\n//     let map = mapRef.current;\n//     let lat = \"40.748817\";\n//     let lng = \"-73.985428\";\n//     const myLatlng = new google.maps.LatLng(lat, lng);\n//     const mapOptions = {\n//       zoom: 12,\n//       center: myLatlng,\n//       scrollwheel: false,\n//       zoomControl: true,\n//       styles: [\n//         {\n//           featureType: \"administrative\",\n//           elementType: \"labels.text.fill\",\n//           stylers: [{ color: \"#444444\" }],\n//         },\n//         {\n//           featureType: \"landscape\",\n//           elementType: \"all\",\n//           stylers: [{ color: \"#f2f2f2\" }],\n//         },\n//         {\n//           featureType: \"poi\",\n//           elementType: \"all\",\n//           stylers: [{ visibility: \"off\" }],\n//         },\n//         {\n//           featureType: \"road\",\n//           elementType: \"all\",\n//           stylers: [{ saturation: -100 }, { lightness: 45 }],\n//         },\n//         {\n//           featureType: \"road.highway\",\n//           elementType: \"all\",\n//           stylers: [{ visibility: \"simplified\" }],\n//         },\n//         {\n//           featureType: \"road.arterial\",\n//           elementType: \"labels.icon\",\n//           stylers: [{ visibility: \"off\" }],\n//         },\n//         {\n//           featureType: \"transit\",\n//           elementType: \"all\",\n//           stylers: [{ visibility: \"off\" }],\n//         },\n//         {\n//           featureType: \"water\",\n//           elementType: \"all\",\n//           stylers: [{ color: \"#5e72e4\" }, { visibility: \"on\" }],\n//         },\n//       ],\n//     };\n\n//     map = new google.maps.Map(map, mapOptions);\n\n//     const marker = new google.maps.Marker({\n//       position: myLatlng,\n//       map: map,\n//       animation: google.maps.Animation.DROP,\n//       title: \"Light Bootstrap Dashboard PRO React!\",\n//     });\n\n//     const contentString =\n//       '<div class=\"info-window-content\"><h2>Light Bootstrap Dashboard PRO React</h2>' +\n//       \"<p>A premium Admin for React-Bootstrap, Bootstrap, React, and React Hooks.</p></div>\";\n\n//     const infowindow = new google.maps.InfoWindow({\n//       content: contentString,\n//     });\n\n//     google.maps.event.addListener(marker, \"click\", function () {\n//       infowindow.open(map, marker);\n//     });\n//   }, []);\n//   return (\n//     <>\n//       <div\n//         style={{ height: `600px` }}\n//         className=\"map-canvas\"\n//         id=\"map-canvas\"\n//         ref={mapRef}\n//       ></div>\n//     </>\n//   );\n// };\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Maps = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = Maps;\nexport default Maps;\nvar _c;\n$RefreshReg$(_c, \"Maps\");","map":{"version":3,"names":["React","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","Maps","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/wisdomkalu/Desktop/Hackathon/react-master/src/views/examples/Manual.js"],"sourcesContent":["\r\nimport React from \"react\";\r\n\r\n// // reactstrap components\r\n// import { Card, Container, Row } from \"reactstrap\";\r\n\r\n// // core components\r\nimport Header from \"components/Headers/Header.js\";\r\n\r\n// const MapWrapper = () => {\r\n//   const mapRef = React.useRef(null);\r\n//   React.useEffect(() => {\r\n//     let google = window.google;\r\n//     let map = mapRef.current;\r\n//     let lat = \"40.748817\";\r\n//     let lng = \"-73.985428\";\r\n//     const myLatlng = new google.maps.LatLng(lat, lng);\r\n//     const mapOptions = {\r\n//       zoom: 12,\r\n//       center: myLatlng,\r\n//       scrollwheel: false,\r\n//       zoomControl: true,\r\n//       styles: [\r\n//         {\r\n//           featureType: \"administrative\",\r\n//           elementType: \"labels.text.fill\",\r\n//           stylers: [{ color: \"#444444\" }],\r\n//         },\r\n//         {\r\n//           featureType: \"landscape\",\r\n//           elementType: \"all\",\r\n//           stylers: [{ color: \"#f2f2f2\" }],\r\n//         },\r\n//         {\r\n//           featureType: \"poi\",\r\n//           elementType: \"all\",\r\n//           stylers: [{ visibility: \"off\" }],\r\n//         },\r\n//         {\r\n//           featureType: \"road\",\r\n//           elementType: \"all\",\r\n//           stylers: [{ saturation: -100 }, { lightness: 45 }],\r\n//         },\r\n//         {\r\n//           featureType: \"road.highway\",\r\n//           elementType: \"all\",\r\n//           stylers: [{ visibility: \"simplified\" }],\r\n//         },\r\n//         {\r\n//           featureType: \"road.arterial\",\r\n//           elementType: \"labels.icon\",\r\n//           stylers: [{ visibility: \"off\" }],\r\n//         },\r\n//         {\r\n//           featureType: \"transit\",\r\n//           elementType: \"all\",\r\n//           stylers: [{ visibility: \"off\" }],\r\n//         },\r\n//         {\r\n//           featureType: \"water\",\r\n//           elementType: \"all\",\r\n//           stylers: [{ color: \"#5e72e4\" }, { visibility: \"on\" }],\r\n//         },\r\n//       ],\r\n//     };\r\n\r\n//     map = new google.maps.Map(map, mapOptions);\r\n\r\n//     const marker = new google.maps.Marker({\r\n//       position: myLatlng,\r\n//       map: map,\r\n//       animation: google.maps.Animation.DROP,\r\n//       title: \"Light Bootstrap Dashboard PRO React!\",\r\n//     });\r\n\r\n//     const contentString =\r\n//       '<div class=\"info-window-content\"><h2>Light Bootstrap Dashboard PRO React</h2>' +\r\n//       \"<p>A premium Admin for React-Bootstrap, Bootstrap, React, and React Hooks.</p></div>\";\r\n\r\n//     const infowindow = new google.maps.InfoWindow({\r\n//       content: contentString,\r\n//     });\r\n\r\n//     google.maps.event.addListener(marker, \"click\", function () {\r\n//       infowindow.open(map, marker);\r\n//     });\r\n//   }, []);\r\n//   return (\r\n//     <>\r\n//       <div\r\n//         style={{ height: `600px` }}\r\n//         className=\"map-canvas\"\r\n//         id=\"map-canvas\"\r\n//         ref={mapRef}\r\n//       ></div>\r\n//     </>\r\n//   );\r\n// };\r\n\r\nconst Maps = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      {/* Page content\r\n      <Container className=\"mt--7\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card className=\"shadow border-0\">\r\n              <MapWrapper />\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Maps;\r\n"],"mappings":";AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;;AAEA;AACA,OAAOC,MAAM,MAAM,8BAA8B;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEA,MAAMC,IAAI,GAAGA,CAAA,KAAM;EACjB,oBACEH,OAAA,CAAAE,SAAA;IAAAE,QAAA,eACEJ,OAAA,CAACF,MAAM;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAWV,CAAC;AAEP,CAAC;AAACC,EAAA,GAhBIN,IAAI;AAkBV,eAAeA,IAAI;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}