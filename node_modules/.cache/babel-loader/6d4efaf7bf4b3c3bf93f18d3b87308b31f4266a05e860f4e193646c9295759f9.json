{"ast":null,"code":"var _jsxFileName = \"/Users/wisdomkalu/Desktop/Hackathon/src/views/examples/data.js\";\nimport React from \"react\";\n\n// // reactstrap components\n// import { Card, Container, Row } from \"reactstrap\";\n\n// // core components\nimport Header from \"components/Headers/Header.js\";\nimport { Container, Row, Card, CardBody, Table } from 'reactstrap';\nimport { CSVLink } from 'react-csv';\n\n// const MapWrapper = () => {\n//   const mapRef = React.useRef(null);\n//   React.useEffect(() => {\n//     let google = window.google;\n//     let map = mapRef.current;\n//     let lat = \"40.748817\";\n//     let lng = \"-73.985428\";\n//     const myLatlng = new google.maps.LatLng(lat, lng);\n//     const mapOptions = {\n//       zoom: 12,\n//       center: myLatlng,\n//       scrollwheel: false,\n//       zoomControl: true,\n//       styles: [\n//         {\n//           featureType: \"administrative\",\n//           elementType: \"labels.text.fill\",\n//           stylers: [{ color: \"#444444\" }],\n//         },\n//         {\n//           featureType: \"landscape\",\n//           elementType: \"all\",\n//           stylers: [{ color: \"#f2f2f2\" }],\n//         },\n//         {\n//           featureType: \"poi\",\n//           elementType: \"all\",\n//           stylers: [{ visibility: \"off\" }],\n//         },\n//         {\n//           featureType: \"road\",\n//           elementType: \"all\",\n//           stylers: [{ saturation: -100 }, { lightness: 45 }],\n//         },\n//         {\n//           featureType: \"road.highway\",\n//           elementType: \"all\",\n//           stylers: [{ visibility: \"simplified\" }],\n//         },\n//         {\n//           featureType: \"road.arterial\",\n//           elementType: \"labels.icon\",\n//           stylers: [{ visibility: \"off\" }],\n//         },\n//         {\n//           featureType: \"transit\",\n//           elementType: \"all\",\n//           stylers: [{ visibility: \"off\" }],\n//         },\n//         {\n//           featureType: \"water\",\n//           elementType: \"all\",\n//           stylers: [{ color: \"#5e72e4\" }, { visibility: \"on\" }],\n//         },\n//       ],\n//     };\n\n//     map = new google.maps.Map(map, mapOptions);\n\n//     const marker = new google.maps.Marker({\n//       position: myLatlng,\n//       map: map,\n//       animation: google.maps.Animation.DROP,\n//       title: \"Light Bootstrap Dashboard PRO React!\",\n//     });\n\n//     const contentString =\n//       '<div class=\"info-window-content\"><h2>Light Bootstrap Dashboard PRO React</h2>' +\n//       \"<p>A premium Admin for React-Bootstrap, Bootstrap, React, and React Hooks.</p></div>\";\n\n//     const infowindow = new google.maps.InfoWindow({\n//       content: contentString,\n//     });\n\n//     google.maps.event.addListener(marker, \"click\", function () {\n//       infowindow.open(map, marker);\n//     });\n//   }, []);\n//   return (\n//     <>\n//       <div\n//         style={{ height: `600px` }}\n//         className=\"map-canvas\"\n//         id=\"map-canvas\"\n//         ref={mapRef}\n//       ></div>\n//     </>\n//   );\n// };\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Data = () => {\n  // Example data for the table\n  const tableData = [{\n    feature: 'Environmental',\n    impact: '10'\n  }, {\n    feature: 'Economic',\n    impact: '3'\n  }, {\n    feature: 'Social',\n    impact: '4'\n  }, {\n    feature: 'Individual',\n    impact: '9'\n  }, {\n    feature: 'Technical',\n    impact: '7'\n  }\n  // Add more data as needed\n  ];\n\n  // Headers for the CSV file, must match the keys in the tableData objects\n  const headers = [{\n    label: \"Feature\",\n    key: \"feature\"\n  }, {\n    label: \"Impact\",\n    key: \"impact\"\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt--7\",\n      fluid: true,\n      style: {\n        paddingTop: '120px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"shadow border-0\",\n            children: /*#__PURE__*/_jsxDEV(CardBody, {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Feature Impact Table\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Table, {\n                responsive: true,\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 136,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Sustainability Dimension\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 137,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Impact Score\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 138,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: tableData.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      scope: \"row\",\n                      children: \"*\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 144,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: item.feature\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 145,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: item.impact\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 146,\n                      columnNumber: 25\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CSVLink, {\n                data: tableData,\n                headers: headers,\n                filename: \"features_impacts.csv\",\n                className: \"btn btn-primary\",\n                target: \"_blank\",\n                children: \"Export to CSV\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = Data;\nexport default Data;\nvar _c;\n$RefreshReg$(_c, \"Data\");","map":{"version":3,"names":["React","Header","Container","Row","Card","CardBody","Table","CSVLink","jsxDEV","_jsxDEV","Fragment","_Fragment","Data","tableData","feature","impact","headers","label","key","children","fileName","_jsxFileName","lineNumber","columnNumber","className","fluid","style","paddingTop","responsive","map","item","index","scope","data","filename","target","_c","$RefreshReg$"],"sources":["/Users/wisdomkalu/Desktop/Hackathon/src/views/examples/data.js"],"sourcesContent":["\nimport React from \"react\";\n\n// // reactstrap components\n// import { Card, Container, Row } from \"reactstrap\";\n\n// // core components\nimport Header from \"components/Headers/Header.js\";\nimport { Container, Row, Card, CardBody, Table } from 'reactstrap';\nimport { CSVLink } from 'react-csv';\n\n// const MapWrapper = () => {\n//   const mapRef = React.useRef(null);\n//   React.useEffect(() => {\n//     let google = window.google;\n//     let map = mapRef.current;\n//     let lat = \"40.748817\";\n//     let lng = \"-73.985428\";\n//     const myLatlng = new google.maps.LatLng(lat, lng);\n//     const mapOptions = {\n//       zoom: 12,\n//       center: myLatlng,\n//       scrollwheel: false,\n//       zoomControl: true,\n//       styles: [\n//         {\n//           featureType: \"administrative\",\n//           elementType: \"labels.text.fill\",\n//           stylers: [{ color: \"#444444\" }],\n//         },\n//         {\n//           featureType: \"landscape\",\n//           elementType: \"all\",\n//           stylers: [{ color: \"#f2f2f2\" }],\n//         },\n//         {\n//           featureType: \"poi\",\n//           elementType: \"all\",\n//           stylers: [{ visibility: \"off\" }],\n//         },\n//         {\n//           featureType: \"road\",\n//           elementType: \"all\",\n//           stylers: [{ saturation: -100 }, { lightness: 45 }],\n//         },\n//         {\n//           featureType: \"road.highway\",\n//           elementType: \"all\",\n//           stylers: [{ visibility: \"simplified\" }],\n//         },\n//         {\n//           featureType: \"road.arterial\",\n//           elementType: \"labels.icon\",\n//           stylers: [{ visibility: \"off\" }],\n//         },\n//         {\n//           featureType: \"transit\",\n//           elementType: \"all\",\n//           stylers: [{ visibility: \"off\" }],\n//         },\n//         {\n//           featureType: \"water\",\n//           elementType: \"all\",\n//           stylers: [{ color: \"#5e72e4\" }, { visibility: \"on\" }],\n//         },\n//       ],\n//     };\n\n//     map = new google.maps.Map(map, mapOptions);\n\n//     const marker = new google.maps.Marker({\n//       position: myLatlng,\n//       map: map,\n//       animation: google.maps.Animation.DROP,\n//       title: \"Light Bootstrap Dashboard PRO React!\",\n//     });\n\n//     const contentString =\n//       '<div class=\"info-window-content\"><h2>Light Bootstrap Dashboard PRO React</h2>' +\n//       \"<p>A premium Admin for React-Bootstrap, Bootstrap, React, and React Hooks.</p></div>\";\n\n//     const infowindow = new google.maps.InfoWindow({\n//       content: contentString,\n//     });\n\n//     google.maps.event.addListener(marker, \"click\", function () {\n//       infowindow.open(map, marker);\n//     });\n//   }, []);\n//   return (\n//     <>\n//       <div\n//         style={{ height: `600px` }}\n//         className=\"map-canvas\"\n//         id=\"map-canvas\"\n//         ref={mapRef}\n//       ></div>\n//     </>\n//   );\n// };\n\nconst Data = () => {\n\n  // Example data for the table\n  const tableData = [\n    { feature: 'Environmental', impact: '10' },\n    { feature: 'Economic', impact: '3' },\n    { feature: 'Social', impact: '4' },\n    { feature: 'Individual', impact: '9' },\n    { feature: 'Technical', impact: '7' },\n    // Add more data as needed\n  ];\n\n  // Headers for the CSV file, must match the keys in the tableData objects\n  const headers = [\n    { label: \"Feature\", key: \"feature\" },\n    { label: \"Impact\", key: \"impact\" }\n  ];\n\n\n\n\n  return (\n    <>\n      <Header />\n      <Container className=\"mt--7\" fluid style={{ paddingTop: '120px' }}>\n        <Row>\n          <div className=\"col\">\n            <Card className=\"shadow border-0\">\n              <CardBody>\n                <h3>Feature Impact Table</h3>\n                \n                <Table responsive>\n                  <thead>\n                    <tr>\n                      <th></th>\n                      <th>Sustainability Dimension</th>\n                      <th>Impact Score</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {tableData.map((item, index) => (\n                      <tr key={index}>\n                        <th scope=\"row\">*</th>\n                        <td>{item.feature}</td>\n                        <td>{item.impact}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n                <CSVLink \n                  data={tableData}\n                  headers={headers}\n                  filename=\"features_impacts.csv\"\n                  className=\"btn btn-primary\"\n                  target=\"_blank\"\n                >\n                  Export to CSV\n                </CSVLink>\n              </CardBody>\n            </Card>\n          </div>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default Data;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}