{"ast":null,"code":"var _jsxFileName = \"/Users/wisdomkalu/Desktop/Hackathon/src/layouts/Admin.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useLocation, Route, Routes, Navigate } from \"react-router-dom\";\n// reactstrap components\nimport { Container } from \"reactstrap\";\n// core components\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport routes from \"routes.js\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Admin = props => {\n  _s();\n  const mainContent = React.useRef(null);\n  const location = useLocation();\n  React.useEffect(() => {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    mainContent.current.scrollTop = 0;\n  }, [location]);\n  const getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return /*#__PURE__*/_jsxDEV(Route, {\n          path: prop.path,\n          element: prop.component,\n          exact: true\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this);\n      } else {\n        return null;\n      }\n    });\n  };\n\n  /*\n  const getBrandText = (path) => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        props?.location?.pathname.indexOf(routes[i].layout + routes[i].path) !==\n        -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n  */\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      ...props,\n      routes: routes,\n      logo: {\n        innerLink: \"/auth/register\",\n        imgSrc: require(\"../assets/img/brand/image.png\"),\n        imgAlt: \"...\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      ref: mainContent,\n      children: [/*#__PURE__*/_jsxDEV(Routes, {\n        children: [getRoutes(routes), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/admin/index\",\n            replace: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Admin, \"PMfNpnVkIm3duHCGVFaoP5mp01Q=\", false, function () {\n  return [useLocation];\n});\n_c = Admin;\nexport default Admin;\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useLocation","Route","Routes","Navigate","Container","Sidebar","routes","jsxDEV","_jsxDEV","Fragment","_Fragment","Admin","props","_s","mainContent","useRef","location","useEffect","document","documentElement","scrollTop","scrollingElement","current","getRoutes","map","prop","key","layout","path","element","component","exact","fileName","_jsxFileName","lineNumber","columnNumber","children","logo","innerLink","imgSrc","require","imgAlt","className","ref","to","replace","fluid","_c","$RefreshReg$"],"sources":["/Users/wisdomkalu/Desktop/Hackathon/src/layouts/Admin.js"],"sourcesContent":["\nimport React from \"react\";\nimport { useLocation, Route, Routes, Navigate } from \"react-router-dom\";\n// reactstrap components\nimport { Container } from \"reactstrap\";\n// core components\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\n\nimport routes from \"routes.js\";\n\nconst Admin = (props) => {\n  const mainContent = React.useRef(null);\n  const location = useLocation();\n\n  React.useEffect(() => {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    mainContent.current.scrollTop = 0;\n  }, [location]);\n\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route path={prop.path} element={prop.component} key={key} exact />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n\n  /*\n  const getBrandText = (path) => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        props?.location?.pathname.indexOf(routes[i].layout + routes[i].path) !==\n        -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n  */\n\n  return (\n    <>\n      <Sidebar\n        {...props}\n        routes={routes}\n        logo={{\n          innerLink: \"/auth/register\",\n          imgSrc: require(\"../assets/img/brand/image.png\"),\n          imgAlt: \"...\",\n        }}\n      />\n      <div className=\"main-content\" ref={mainContent}>\n        {/* <AdminNavbar\n          {...props}\n          brandText={getBrandText(props?.location?.pathname)}\n        /> */}\n\n        <Routes>\n          {getRoutes(routes)}\n          <Route path=\"*\" element={<Navigate to=\"/admin/index\" replace />} />\n        </Routes>\n        <Container fluid>\n          {/* <AdminFooter /> */}\n        </Container>\n      </div>\n    </>\n  );\n};\n\nexport default Admin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}